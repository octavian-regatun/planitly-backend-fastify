// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int                @id @default(autoincrement())
  username             String             @db.VarChar(255)
  picture              String?            @db.VarChar(255)
  firstName            String             @db.VarChar(255)
  lastName             String             @db.VarChar(255)
  email                String             @unique @db.VarChar(255)
  gender               String             @db.VarChar(255)
  birthday             DateTime?          @db.Date
  locale               String?            @db.VarChar(255)
  role                 String             @db.VarChar(255)
  authProvider         String             @db.VarChar(255)
  createdAt            DateTime           @default(now()) @db.Timestamp(0)
  updatedAt            DateTime           @default(now()) @db.Timestamp(0)
  recipientFriendships Friendship[]       @relation("recipient")
  requesterFriendships Friendship[]       @relation("requester")
  eventParticipant     EventParticipant[]
}

model Event {
  id                Int                @id @default(autoincrement())
  title             String             @db.VarChar(255)
  description       String             @db.Text
  picture           String?            @db.VarChar(255)
  color             String             @db.VarChar(255)
  allDay            Boolean            @db.Boolean
  startAt           DateTime           @db.Timestamp(0)
  endAt             DateTime           @db.Timestamp(0)
  createdAt         DateTime           @default(now()) @db.Timestamp(0)
  updatedAt         DateTime           @default(now()) @db.Timestamp(0)
  eventParticipants EventParticipant[]
}

model Location {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  latitude  Float    @db.DoublePrecision
  longitude Float    @db.DoublePrecision
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0)
}

model Friendship {
  id          Int      @id @default(autoincrement())
  recipientId Int      @db.Integer
  recipient   User     @relation("recipient", fields: [recipientId], references: [id])
  requesterId Int      @db.Integer
  requester   User     @relation("requester", fields: [requesterId], references: [id])
  status      String   @db.VarChar(255)
  createdAt   DateTime @default(now()) @db.Timestamp(0)
  updatedAt   DateTime @default(now()) @db.Timestamp(0)
}

model EventParticipant {
  id            Int      @id @default(autoincrement())
  eventId       Int      @db.Integer
  Event         Event    @relation(fields: [eventId], references: [id])
  participantId Int      @db.Integer
  participant   User     @relation(fields: [participantId], references: [id])
  createdAt     DateTime @default(now()) @db.Timestamp(0)
  updatedAt     DateTime @default(now()) @db.Timestamp(0)
}
